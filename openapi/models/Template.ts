/* tslint:disable */
/* eslint-disable */
/**
 * Template Service
 * This is a Template YAML For Microservices
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
     TemplateFullFromJSONTyped
} from './index';

/**
 * This is a Template object
 * @export
 * @interface Template
 */
export interface Template {
    /**
     * 
     * @type {string}
     * @memberof Template
     */
    foo?: string;
    /**
     * 
     * @type {string}
     * @memberof Template
     */
    bar?: string;
}

/**
 * Check if a given object implements the Template interface.
 */
export function instanceOfTemplate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplateFromJSON(json: any): Template {
    return TemplateFromJSONTyped(json, false);
}

export function TemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): Template {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['foo'] === 'TemplateFull') {
            return TemplateFullFromJSONTyped(json, true);
        }
    }
    return {
        
        'foo': !exists(json, 'foo') ? undefined : json['foo'],
        'bar': !exists(json, 'bar') ? undefined : json['bar'],
    };
}

export function TemplateToJSON(value?: Template | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'foo': value.foo,
        'bar': value.bar,
    };
}

